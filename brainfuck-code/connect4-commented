+[[-]
*** Print Connect *** 
+++++++++++[>+>+++++++++>++++++++++>++++++<<<<-]
>>>>+.<+.-..<++.--.>++++++.<<+++++++++++++++++++++
.--------------------->>>---------------.+++<<<-..>>>>>

 *** SET MEMORY ***
>>>>>>>>>>
->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>>->>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>-<+[-<+]-<<<<<<<
 +[<+<+<+<+<<+]-
<<<<<<<<<

-[+
 *** Ask the number ***
Pointer at 0007

-[
 +<++++++++++.---------->
 Should ask again byte; Gets flipped if number is not valid
 +>>>>

 Subtract 48 from the value so it becomes 0 to 6
 ,<<++++[>+++[>----<-]<-]>>
 [->+>>>>>+<<<<<<]>- Copy the value

 subtract it 6 times and check if it zero anywhere (is it correct input)
 [-[-[-[-[-[-[
  [-]>>>>>[-]<<<<<<<<<<->>>>> Set ask again byte
 ]]]]]]]<<<<<

<++++++++++.---------->
 Check that the "was this correct input" is still 1
-]>>>>>>>>

 *** FLIP THE BYTE IN MEMORY ***

Check if is player1
[>>

 -[-[-[-[-[-[-[>>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>]

 Go to the first one that has a 1
 >[<]>[<]>[<]>[<]>[<]>
 
 Check was there a space; If was flip in memory
 [-
  Go 6x7 steps ahead to reach the memory location of the
  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ [<]
 ]
 Glide back
 +[-<+]-<+[-<+]->
]

Set the pointers to the same place
<+[->+]-<
Switch the turn; Flip the byte to 0 to 1
[-<<]>[<+<]>

Check if is player2
[>>

 -[-[-[-[-[-[-[>>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>]

 Go to the first one that has a 1
 >[<]>[<]>[<]>[<]>[<]>

 Check was there a space; If was flip in memory
 [-
  Go 6x7x2 steps ahead to reach the memory location of the
  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>+ [<]
 ]
 Glide back
 +[-<+]-<+[-<+]-<+[-<+]->
]
Set the pointers to the same place
<+[->+]-<


 *** DRAW THE BOARD ***
 Pointer at 000F (whitch player byte)
 
 Print the numbers
 <<<<<<<<<<<------.+.+.+.+.+.+.>>>>>>>>>>>
 
Repeat once for each line
<<<<<<<+++++
[
 Print new line
 <++++++++++.---------->
 Copy the value
 [-<+>>+<]<[->+<]>>

 [[->+<]>-]>
 >>>>>>>
 [
    It's empty; render a dash
    ++++++++++++++++++++++++++++++++++++++++++++.[-]+
    +[-<+]-
    
    Set a bite to know that it printed
    <<+>>>
  ] +[-<+]-
  
  Check did it print empty
  <<
  -[+
   Move to that memory location
   <<<<<<
   [-<+>>+<]<[->+<]>>[[->+<]>-]>
   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   Copy that byte
   [+[-<+]-<+[-<+]-<<<+>>>>+[->+]->]+[-<+]-<+[-<+]-<<
   Set adjacent to minus1 to be able to switch it with 1:0
   -<
   If it's 0 print 0
   [<++++[->+++++++++++<]>+++.
    [-]+<]+[->+]-<
   [-<<]>[<+<]>
   else print X
   [<<+++[->++++[>+++++++<-]<]>>+++.[-]]
   >+
  ]
  <<<<<<
 
  Copy the value
 [-<+>>+<]<[->+<]>>

 [[->+<]>-]>
 >>>>>>>>>>>>>
 [
    It's empty; render a dash
    ++++++++++++++++++++++++++++++++++++++++++++.[-]+
    +[-<+]-
    
    Set a bite to know that it printed
    <<+>>>
  ] +[-<+]-
  
  Check did it print empty
  <<
  -[+
   Move to that memory location
   <<<<<<
   [-<+>>+<]<[->+<]>>[[->+<]>-]>
   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   >>>>>>
   Copy that byte
   [+[-<+]-<+[-<+]-<<<+>>>>+[->+]->]+[-<+]-<+[-<+]-<<
   Set adjacent to minus1 to be able to switch it with 1:0
   -<
   If it's 0 print 0
   [<++++[->+++++++++++<]>+++.
    [-]+<]+[->+]-<
   [-<<]>[<+<]>
   else print X
   [<<+++[->++++[>+++++++<-]<]>>+++.[-]]
   >+
  ]
  <<<<<<
  
  Copy the value
 [-<+>>+<]<[->+<]>>

 [[->+<]>-]>
 >>>>>>>>>>>>>>>>>>>
 [
    It's empty; render a dash
    ++++++++++++++++++++++++++++++++++++++++++++.[-]+
    +[-<+]-
    
    Set a bite to know that it printed
    <<+>>>
  ] +[-<+]-
  
  Check did it print empty
  <<
  -[+
   Move to that memory location
   <<<<<<
   [-<+>>+<]<[->+<]>>[[->+<]>-]>
   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   >>>>>>>>>>>>
   Copy that byte
   [+[-<+]-<+[-<+]-<<<+>>>>+[->+]->]+[-<+]-<+[-<+]-<<
   Set adjacent to minus1 to be able to switch it with 1:0
   -<
   If it's 0 print 0
   [<++++[->+++++++++++<]>+++.
    [-]+<]+[->+]-<
   [-<<]>[<+<]>
   else print X
   [<<+++[->++++[>+++++++<-]<]>>+++.[-]]
   >+
  ]
  <<<<<<
  
  Copy the value
 [-<+>>+<]<[->+<]>>

 [[->+<]>-]>
 >>>>>>>>>>>>>>>>>>>>>>>>>
 [
    It's empty; render a dash
    ++++++++++++++++++++++++++++++++++++++++++++.[-]+
    +[-<+]-
    
    Set a bite to know that it printed
    <<+>>>
  ] +[-<+]-
  
  Check did it print empty
  <<
  -[+
   Move to that memory location
   <<<<<<
   [-<+>>+<]<[->+<]>>[[->+<]>-]>
   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   >>>>>>>>>>>>>>>>>>
   Copy that byte
   [+[-<+]-<+[-<+]-<<<+>>>>+[->+]->]+[-<+]-<+[-<+]-<<
   Set adjacent to minus1 to be able to switch it with 1:0
   -<
   If it's 0 print 0
   [<++++[->+++++++++++<]>+++.
    [-]+<]+[->+]-<
   [-<<]>[<+<]>
   else print X
   [<<+++[->++++[>+++++++<-]<]>>+++.[-]]
   >+
  ]
  <<<<<<
  
  Copy the value
 [-<+>>+<]<[->+<]>>

 [[->+<]>-]>
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 [
    It's empty; render a dash
    ++++++++++++++++++++++++++++++++++++++++++++.[-]+
    +[-<+]-
    
    Set a bite to know that it printed
    <<+>>>
  ] +[-<+]-
  
  Check did it print empty
  <<
  -[+
   Move to that memory location
   <<<<<<
   [-<+>>+<]<[->+<]>>[[->+<]>-]>
   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   >>>>>>>>>>>>>>>>>>>>>>>>
   Copy that byte
   [+[-<+]-<+[-<+]-<<<+>>>>+[->+]->]+[-<+]-<+[-<+]-<<
   Set adjacent to minus1 to be able to switch it with 1:0
   -<
   If it's 0 print 0
   [<++++[->+++++++++++<]>+++.
    [-]+<]+[->+]-<
   [-<<]>[<+<]>
   else print X
   [<<+++[->++++[>+++++++<-]<]>>+++.[-]]
   >+
  ]
  <<<<<<
  
  Copy the value
 [-<+>>+<]<[->+<]>>

 [[->+<]>-]>
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 [
    It's empty; render a dash
    ++++++++++++++++++++++++++++++++++++++++++++.[-]+
    +[-<+]-
    
    Set a bite to know that it printed
    <<+>>>
  ] +[-<+]-
  
  Check did it print empty
  <<
  -[+
   Move to that memory location
   <<<<<<
   [-<+>>+<]<[->+<]>>[[->+<]>-]>
   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   Copy that byte
   [+[-<+]-<+[-<+]-<<<+>>>>+[->+]->]+[-<+]-<+[-<+]-<<
   Set adjacent to minus1 to be able to switch it with 1:0
   -<
   If it's 0 print 0
   [<++++[->+++++++++++<]>+++.
    [-]+<]+[->+]-<
   [-<<]>[<+<]>
   else print X
   [<<+++[->++++[>+++++++<-]<]>>+++.[-]]
   >+
  ]
  <<<<<<
  
  Copy the value
 [-<+>>+<]<[->+<]>>

 [[->+<]>-]>
 >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 [
    It's empty; render a dash
    ++++++++++++++++++++++++++++++++++++++++++++.[-]+
    +[-<+]-
    
    Set a bite to know that it printed
    <<+>>>
  ] +[-<+]-
  
  Check did it print empty
  <<
  -[+
   Move to that memory location
   <<<<<<
   [-<+>>+<]<[->+<]>>[[->+<]>-]>
   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
   Copy that byte
   [+[-<+]-<+[-<+]-<<<+>>>>+[->+]->]+[-<+]-<+[-<+]-<<
   Set adjacent to minus1 to be able to switch it with 1:0
   -<
   If it's 0 print 0
   [<++++[->+++++++++++<]>+++.
    [-]+<]+[->+]-<
   [-<<]>[<+<]>
   else print X
   [<<+++[->++++[>+++++++<-]<]>>+++.[-]]
   >+
  ]
  <<<<<<
-]


 *** Check has anybody won
+[->+]->+[->+]-
Horizontal player1 check
>>>>>>>+++++
[
 [[-<+]-<+<<<<<++[->+]->>>>>>>]+[-<+]-<[->>>>>>>>++[-<+]-<]<<<<<
 [-[-[-[-[->]>]>]>]>]>
 >>>>>>[>>>>>>[>>>>>>[>>>>>>[+[-<+]->+>>>>>>>>>>>>]]]]+[-<+]->>>>>>>
 [[-<+]-<+<<<<<++[->+]->>>>>>>]+[-<+]-<[->>>>>>>>++[-<+]-<]<<<<<
 [-[-[-[-[->]>]>]>]>]>
 >>>>>>>>>>>>[>>>>>>[>>>>>>[>>>>>>[+[-<+]->+>>>>>>>>>>>>]]]]+[-<+]->>>>>>>
 [[-<+]-<+<<<<<++[->+]->>>>>>>]+[-<+]-<[->>>>>>>>++[-<+]-<]<<<<<
 [-[-[-[-[->]>]>]>]>]>
 >>>>>>>>>>>>>>>>>>[>>>>>>[>>>>>>[>>>>>>[+[-<+]->+>>>>>>>>>>>>]]]]+[-<+]->>>>>>>
 [[-<+]-<+<<<<<++[->+]->>>>>>>]+[-<+]-<[->>>>>>>>++[-<+]-<]<<<<<
 [-[-[-[-[->]>]>]>]>]>
 >>>>>>>>>>>>>>>>>>>>>>>>[>>>>>>[>>>>>>[>>>>>>[+[-<+]->+>>>>>>>>>>>>]]]]+[-<+]->>>>>>>
-]

Vertical player1 check
<<<<<<[[-]+>>>>>>]+[-<+]- check only if no wins found (else it breaks)
>-[+<<<<<<<[-]+++++++
 [
  [->+>+<<]>>[-<<+>>]<
  -[-[-[-[-[-[->>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>
  -Set a mark to return after check
  >[>[>[>[ <<<<<+[-<+]-<+>>+[->+]->>>>>> ]]]]+[-<+]
  >>[>[>[>[ +[-<+]-<+>>>>>>>> ]]]]+[-<+]-
  <[->>+<<]>
  >[<<<<<<<[-]+>]<+[->+]- If there was a win dont check anymore (it could break)
 <<<<<<-]
]+< Skip to here if found a win already
+[->+]->

Diagonal check
[[-]+>>>>>>]+[-<+]->-[+  check if no wins
 <<<<<[-]++++[
  [->+<<+>]>[-<+>]<<
  -[-[-[->>>>>>]>>>>>>]>>>>>>]>>>>>>-
  >[>>>>>>>[>>>>>>>[>>>>>>>[ +[-<+]-<+[-<+]-<+>>+[->+]->>>>>> ]]]]+[-<+]-
  >>[>>>>>>>[>>>>>>>[>>>>>>>[ +[-<+]-<+[-<+]-<+>>+[->+]->>>>>> ]]]]+[-<+]-
  >>>>[>>>>>[>>>>>[>>>>>[ +[-<+]-<+[-<+]-<+>>+[->+]->>>>>> ]]]]+[-<+]-
  >>>>>[>>>>>[>>>>>[>>>>>[ +[-<+]-<+[-<+]-<+>>+[->+]->>>>>> ]]]]+[-<+]
  +[-<+]-<<<<
 -]
 >>>[->>+<<]
]+<+[->+]-<[-]>>

[ 0 Wins! text
 <<+[-<+]-<<<<<<<<<<++++++++[<++++++>-]<<<<<<->..>>>>.>++++[<---->-]<.
 <<<------------.>-----------.+++++.+++++.>>+.<<<<.
 Delete memory
 +[->+]+[->+]+[->+]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
 +[-[-]<+]
 Make able to exit loops
 +>>>>>>>>>->->>+>
]

<-[+>
 +[->+]-
 Horizontal player2 check
 >>>>>>>+++++
 [
  [[-<+]-<+<<<<<++[->+]->>>>>>>]+[-<+]-<[->>>>>>>>++[-<+]-<]<<<<<
  [-[-[-[-[->]>]>]>]>]>
  >>>>>>[>>>>>>[>>>>>>[>>>>>>[+[-<+]->+>>>>>>>>>>>>]]]]+[-<+]->>>>>>>
  [[-<+]-<+<<<<<++[->+]->>>>>>>]+[-<+]-<[->>>>>>>>++[-<+]-<]<<<<<
  [-[-[-[-[->]>]>]>]>]>
  >>>>>>>>>>>>[>>>>>>[>>>>>>[>>>>>>[+[-<+]->+>>>>>>>>>>>>]]]]+[-<+]->>>>>>>
  [[-<+]-<+<<<<<++[->+]->>>>>>>]+[-<+]-<[->>>>>>>>++[-<+]-<]<<<<<
  [-[-[-[-[->]>]>]>]>]>
  >>>>>>>>>>>>>>>>>>[>>>>>>[>>>>>>[>>>>>>[+[-<+]->+>>>>>>>>>>>>]]]]+[-<+]->>>>>>>
  [[-<+]-<+<<<<<++[->+]->>>>>>>]+[-<+]-<[->>>>>>>>++[-<+]-<]<<<<<
  [-[-[-[-[->]>]>]>]>]>
  >>>>>>>>>>>>>>>>>>>>>>>>[>>>>>>[>>>>>>[>>>>>>[+[-<+]->+>>>>>>>>>>>>]]]]+[-<+]->>>>>>>
 -]

 Vertical player2 check
 <<<<<<[[-]+>>>>>>]+[-<+]- check only if no wins found (else it breaks)
 >-[+<<<<<<<[-]+++++++
  [
   [->+>+<<]>>[-<<+>>]<
   -[-[-[-[-[-[->>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>]>>>>>>
   -Set a mark to return after check
   >[>[>[>[ <<<<<+[-<+]-<+>>+[->+]->>>>>> ]]]]+[-<+]
   >>[>[>[>[ +[-<+]-<+>>>>>>>> ]]]]+[-<+]-
   <[->>+<<]>
   >[<<<<<<<[-]+>]<+[->+]- If there was a win dont check anymore (it could break)
  <<<<<<-]
 ]+< Skip to here if found a win already
 +[->+]->

 Diagonal check
 [[-]+>>>>>>]+[-<+]->-[+  check if no wins
  <<<<<[-]++++[
   [->+<<+>]>[-<+>]<<
   -[-[-[->>>>>>]>>>>>>]>>>>>>]>>>>>>-
   >[>>>>>>>[>>>>>>>[>>>>>>>[ +[-<+]-<+[-<+]-<+>>+[->+]->>>>>> ]]]]+[-<+]-
   >>[>>>>>>>[>>>>>>>[>>>>>>>[ +[-<+]-<+[-<+]-<+>>+[->+]->>>>>> ]]]]+[-<+]-
   >>>>[>>>>>[>>>>>[>>>>>[ +[-<+]-<+[-<+]-<+>>+[->+]->>>>>> ]]]]+[-<+]-
   >>>>>[>>>>>[>>>>>[>>>>>[ +[-<+]-<+[-<+]-<+>>+[->+]->>>>>> ]]]]+[-<+]
   +[-<+]-<<<<
  -]
  >>>[->>+<<]
 ]+<+[->+]-<[-]>>

 [ X Wins! text
  <<+[-<+]-<+[-<+]-<<<<<<<<<<+++++[<++++++>-]<<<<<<->..>-----------.>>>++.<<<
  -.>-----------.+++++.+++++.>>+.<<<<.
  Delete memory
  +[->+]+[->+]+[->+]>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
  +[-[-]<+]
  Make able to exit loops
  +>>>>>>>>>->>
 ]
]

Ask a number again
<<+[-<+]-<+[-<+]-
<<<<<<<<<-]

Game loop has ended; Start another game
>>>>>>>>>+>+clean trash<<<<<<<<<<+]
<-]
